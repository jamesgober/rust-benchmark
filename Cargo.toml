#╔═══════════════════════════════════════════════════════════╗
#║                                                           ║
#║     ▗▄▄▖ ▗▄▄▄▖▗▖  ▗▖ ▗▄▄▖▗▖ ▗▖▗▖  ▗▖ ▗▄▄▖ ▗▄▄▄▖ ▗▖ ▗▖     ║
#║     ▐▌ ▐▌▐▌   ▐▛▚▖▐▌▐▌   ▐▌ ▐▌▐▛▚▞▜▌▐▌  ▐▌▐▌  ▐▌▐▌▗▞▘     ║
#║     ▐▛▀▚▖▐▛▀▀▘▐▌ ▝▜▌▐▌   ▐▛▀▜▌▐▌  ▐▌▐▛▀▀▜▌▐▛▀▀▚▖▐▛▚▖      ║
#║     ▐▙▄▞▘▐▙▄▄▖▐▌  ▐▌▝▚▄▄▖▐▌ ▐▌▐▌  ▐▌▐▌  ▐▌▐▌  ▐▌▐▌ ▐▌     ║
#║                                                           ║
#╠═══════════╦══════════════════════════════════╦════════════╣
#║ BENCHMARK ┇ PERFORMANCE BENCHMARKING LIBRARY ┇ RUST BUILT ║
#╚═══════════╩══════════════════════════════════╩════════════╝
[package]
name    = "benchmark"
version = "0.6.0"
edition = "2021"

# Minimum Supported Rust Version (MSRV)
rust-version = "1.70"

# License
license = "Apache-2.0"

# Links
homepage      = "https://github.com/jamesgober/rust-benchmark"
repository    = "https://github.com/jamesgober/rust-benchmark"
documentation = "https://docs.rs/benchmark"

# Description
description = "Nanosecond-precision benchmarking for dev, testing, and production. Zero-overhead core timing when disabled; optional std-powered collectors and zero-dependency metrics (Watch/Timer) for real service observability."

# Keywords (5 total)
keywords = [
    "benchmark", 
    "performance", 
    "profiling", 
    "timing", 
    "metrics"
]

# Categories (5 total)
categories = [
    "development-tools::profiling", 
    "memory-management"
]

# Authors
authors = [
    "James Gober <code@jamesgober.dev>"
]



#╔═══════════════════════════════════════════════════════════╗
#║ ⚙️ FEATURES
#╚═══════════════════════════════════════════════════════════╝
[features]

# Internal std switch (activated by higher-level features)
std = []

# Core features
default        = ["benchmark", "collector"]               # Turn-key dev: timing + in-process stats
benchmark      = ["std"]                                   # Enable real timing
collector      = ["std"]                                   # Collector + histogram
metrics        = ["collector"]                             # Watch/Timer production metrics

# Precision backends
high-precision = ["collector"]                             # Swap to high-precision histogram backend
hdr            = ["high-precision", "dep:hdrhistogram"]   # Use external HDR histogram backend

# Perf/long tests are opt-in
perf-tests = []
long-tests = []

# Faster locks in hot paths (optional)
parking-lot-locks = ["dep:parking_lot"]



#╔═══════════════════════════════════════════════════════════╗
#║ 🧭 BENCHMARKS
#╚═══════════════════════════════════════════════════════════╝
[[bench]] # Zero Overhead Claim
name    = "overhead"
harness = false

[[bench]] # Statistics Claim
name    = "stats"
harness = false

[[bench]] # Timer primitives (Instant/Duration) micro-benches
name    = "timers"
harness = false

[[bench]] # Histogram hot-path benches (record/percentiles)
name    = "histogram_hot"
harness = false

[[bench]] # Watch/Timer hot-path benches (metrics)
name    = "watch_timer_hot"
harness = false



#╔═══════════════════════════════════════════════════════════╗
#║ 🧩 DEPENDENCIES
#╚═══════════════════════════════════════════════════════════╝
[dependencies]

# Optional: faster synchronization primitives
parking_lot = { version = "0.12", optional = true }

# Optional: external HDR histogram backend
hdrhistogram = { version = "7", optional = true }


#╔═══════════════════════════════════════════════════════════╗
#║ 🧩 DEV DEPENDENCIES
#╚═══════════════════════════════════════════════════════════╝
[dev-dependencies]
tokio     = { version = "1", features = ["macros", "rt-multi-thread", "time"] }
trybuild  = "1.0"
criterion = "0.5"
proptest  = "1"

#╔═══════════════════════════════════════════════════════════╗
#║ 🧪 EXAMPLES (with required-features)
#╚═══════════════════════════════════════════════════════════╝
[[example]]
name = "zero_overhead"
path = "examples/zero_overhead.rs"
# zero_overhead should compile in no-default-features mode

[[example]]
name = "basic_cli"
path = "examples/basic_cli.rs"
required-features = ["benchmark"]

[[example]]
name = "overhead_compare"
path = "examples/overhead_compare.rs"
required-features = ["benchmark"]

[[example]]
name = "async_task"
path = "examples/async_task.rs"
required-features = ["benchmark"]

[[example]]
name = "multi_threaded_collection"
path = "examples/multi_threaded_collection.rs"
required-features = ["collector"]

[[example]]
name = "prometheus_textfile"
path = "examples/prometheus_textfile.rs"
required-features = ["metrics"]

[[example]]
name = "web_server"
path = "examples/web_server.rs"
required-features = ["metrics"]